- name: Ensure passwordless sudo for {{ ansible_user }} user
  become: true
  copy:
    dest: /etc/sudoers.d/{{ ansible_user }}
    content: "{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL\n"
    owner: root
    group: wheel
    mode: '0440'

- name: Check if Rosetta 2 is installed
  stat:
    path: /usr/libexec/rosetta
  register: rosetta_stat

- set_fact:
    rosetta_installed: "{{ rosetta_stat.stat.exists }}"

- name: Install Rosetta 2 if JDK 8 is required and Rosetta is not installed
  become: true
  command: /usr/sbin/softwareupdate --install-rosetta --agree-to-license
  when:
    - 8 in jdk_versions
    - rosetta_installed is not defined or not rosetta_installed

- name: Install Homebrew Temurin casks
  community.general.homebrew_cask:
    name: "{{ 'temurin' if item == 24 else 'temurin@' ~ item }}"
    state: present
  loop: "{{ jdk_versions }}"

- name: Install jenv with Homebrew
  community.general.homebrew:
    name: jenv
    state: present

- name: Add jenv init to shell config
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: 'eval "$(jenv init -)"'
    insertafter: EOF
    create: yes

- name: Add Java versions to jenv
  shell: |
    export PATH="/opt/homebrew/bin:/usr/local/bin:$PATH"
    jenv add "$JAVA_HOME"
  environment:
    JAVA_HOME: "{{ lookup('pipe', '/usr/libexec/java_home -v ' ~ item) }}"
  loop: "{{ jdk_versions }}"

- name: Set global Java version via jenv
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: "jenv global {{ jdk_default_version }}"
    insertafter: EOF

- name: Remove passwordless sudo for {{ ansible_user }} user
  become: true
  file:
    path: /etc/sudoers.d/{{ ansible_user }}
    state: absent