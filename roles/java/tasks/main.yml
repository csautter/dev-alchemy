# MACOS
- name: Install OpenJDK on macOS using Homebrew
  community.general.homebrew_cask:
    name: "temurin{{ item }}"
    state: present
  loop: "{{ jdk_versions }}"
  when: ansible_facts['os_family'] == "Darwin"

# DEBIAN/UBUNTU
- name: Install OpenJDK on Debian/Ubuntu
  apt:
    name: "openjdk-{{ item }}-jdk"
    state: present
    update_cache: yes
  loop: "{{ jdk_versions }}"
  when: ansible_facts['os_family'] == "Debian"

# REDHAT/ROCKY/FEDORA
- name: Install OpenJDK on RedHat/Fedora
  package:
    name: "java-{{ item }}-openjdk-devel"
    state: present
  loop: "{{ jdk_versions }}"
  when: ansible_facts['os_family'] in ["RedHat", "Rocky", "AlmaLinux", "Fedora"]

# WINDOWS - Chocolatey path
- name: Check if Chocolatey is available
  win_command: choco --version
  register: choco_check
  ignore_errors: true
  changed_when: false
  when: ansible_facts['os_family'] == "Windows"

- name: Install OpenJDK via Chocolatey
  win_chocolatey:
    name: "openjdk"
    version: "{{ item }}"
    state: present
  loop: "{{ jdk_versions }}"
  when:
    - ansible_facts['os_family'] == "Windows"
    - choco_check.rc == 0

# WINDOWS - Fallback binary install (Temurin)
- name: Create install folders for fallback Temurin JDK
  win_file:
    path: "C:\\Program Files\\Java\\jdk-{{ item }}"
    state: directory
  loop: "{{ jdk_versions }}"
  when:
    - ansible_facts['os_family'] == "Windows"
    - choco_check.rc != 0

- name: Download and extract Temurin fallback JDK
  win_get_url:
    url: "{{ temurin_base_url | replace('item', item | string) }}/OpenJDK{{ item }}U-jdk_x64_windows_hotspot_latest.zip"
    dest: "C:\\Program Files\\Java\\jdk-{{ item }}.zip"
  loop: "{{ jdk_versions }}"
  when:
    - ansible_facts['os_family'] == "Windows"
    - choco_check.rc != 0

- name: Unzip Temurin fallback JDK
  win_unzip:
    src: "C:\\Program Files\\Java\\jdk-{{ item }}.zip"
    dest: "C:\\Program Files\\Java\\jdk-{{ item }}"
    remote_src: yes
  loop: "{{ jdk_versions }}"
  when:
    - ansible_facts['os_family'] == "Windows"
    - choco_check.rc != 0

- name: Add all fallback JDKs to PATH
  win_path:
    elements: "C:\\Program Files\\Java\\jdk-{{ item }}\\bin"
  loop: "{{ jdk_versions }}"
  when:
    - ansible_facts['os_family'] == "Windows"
    - choco_check.rc != 0
