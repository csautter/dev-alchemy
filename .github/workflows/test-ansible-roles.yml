# GitHub Actions workflow to test all Ansible roles on Windows, macOS, and Ubuntu
name: Test Ansible Roles

on:
  push:
    branches: [main, feat*]
    paths-ignore:
      - "**/*.md"
      - "*.md"
  pull_request:
    branches: [main, feat*]
    paths-ignore:
      - "**/*.md"
      - "*.md"

jobs:
  test-ansible-roles:
    name: Ansible on ${{ matrix.os }} with protocol ${{ matrix.ansible_protocol }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-15, ubuntu-24.04, windows-2025]
        ansible_protocol: [ssh]
        include:
          - os: windows-2025
            ansible_protocol: winrm
    steps:
      - uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: true

      - name: Convert line endings to LF
        if: runner.os == 'Windows'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
        if: runner.os != 'Windows'

      - name: Windows install cygwin
        uses: cygwin/cygwin-install-action@v6
        if: runner.os == 'Windows'
        with:
          packages: python39,python39-pip,python39-cryptography,openssh,git,make,gcc-core,gcc-g++,libffi-devel,sshpass

      - name: Windows install Ansible
        if: runner.os == 'Windows'
        run: |
          echo "current dir: $(pwd)"
          D:\cygwin\bin\bash.exe -l -c "python -m pip install ansible pywinrm"

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible
        if: runner.os != 'Windows'

      - name: Display Ansible version
        run: ansible --version
        if: runner.os != 'Windows'

      - name: Windows enable winrm
        if: runner.os == 'Windows' && matrix.ansible_protocol == 'winrm'
        shell: powershell
        run: |
          Set-Item -Path WSMan:\localhost\Service\AllowUnencrypted -Value $true;
          Set-Item -Path WSMan:\localhost\Service\Auth\Basic -Value $true;
          Enable-PSRemoting -Force;

      - name: Windows enable ssh
        if: runner.os == 'Windows' && matrix.ansible_protocol == 'ssh'
        shell: powershell
        run: |
          Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0;
          Start-Service sshd; Set-Service -Name sshd -StartupType 'Automatic';

      # hardcoded passwords are bad, but this is just for testing
      - name: Windows create local ansible user
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          net user ansible 'Secret123!@#' /add;
          net localgroup Administrators ansible /add;

      - name: Check if ssh user on windows can connect
        if: runner.os == 'Windows' && matrix.ansible_protocol == 'ssh'
        shell: powershell
        run: |
          sshpass -p 'Secret123!@#' ssh -o StrictHostKeyChecking=no ansible@localhost -p 22 "whoami"

      # Set default shell for OpenSSH to PowerShell, otherwise Ansible will fail with the default cmd.exe
      - name: Set default shell for OpenSSH on Windows to PowerShell
        if: runner.os == 'Windows' && matrix.ansible_protocol == 'ssh'
        shell: powershell
        run: |
          New-ItemProperty -Path 'HKLM:\SOFTWARE\OpenSSH' -Name 'DefaultShell' -Value 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe' -PropertyType String -Force

      - name: Run all Ansible roles
        shell: bash
        run: |
          ansible-playbook -i inventory/localhost.yaml playbooks/setup.yml
        env:
          ANSIBLE_FORCE_COLOR: "true"
        if: runner.os != 'Windows'

      - name: Run all Ansible roles on Windows
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          C:\cygwin\bin\bash.exe -l -c "cd /cygdrive/d/a/dev-alchemy/dev-alchemy && ansible-playbook -i inventory/localhost_windows_${{ matrix.ansible_protocol }}.yml -l windows_host playbooks/setup.yml"
        env:
          ANSIBLE_FORCE_COLOR: "true"
