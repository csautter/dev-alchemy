# GitHub Actions workflow to test all Ansible roles on Windows, macOS, and Ubuntu
name: Test Ansible Roles

on:
  push:
    branches: [main, feat*]
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches: [main, feat*]
    paths-ignore:
      - "**/*.md"

jobs:
  test-ansible-roles:
    name: Test Ansible Roles on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Uncomment the following line to test on all specified OSs
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
        if: runner.os != 'Windows'

      - name: Windows download cygwin
        shell: powershell
        if: runner.os == 'Windows'
        run: |
          mkdir C:\cygwin
          Invoke-WebRequest -Uri https://cygwin.com/setup-x86_64.exe -OutFile C:\cygwin\setup-x86_64.exe

      - name: Windows install cygwin
        shell: powershell
        if: runner.os == 'Windows'
        run: |
          C:\cygwin\setup-x86_64.exe -q -n -N --wait --no-admin -d -R C:\cygwin64 -s https://mirrors.kernel.org/sourceware/cygwin/ -s https://ftp.fau.de/cygwin/ -P python39,python39-pip,python39-cryptography,openssh,git,make,gcc-core,gcc-g++,libffi-devel

      - name: Windows install Ansible
        if: runner.os == 'Windows'
        run: |
          C:\cygwin64\bin\python.exe -m pip install ansible pywinrm

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible
        if: runner.os != 'Windows'

      - name: Display Ansible version
        run: ansible --version
        if: runner.os != 'Windows'

      # hardcoded passwords are bad, but this is just for testing
      - name: Windows enable winrm
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Set-Item -Path WSMan:\localhost\Service\AllowUnencrypted -Value $true;
          Set-Item -Path WSMan:\localhost\Service\Auth\Basic -Value $true;
          Enable-PSRemoting -Force;
          net user ansible 'Secret123!@#' /add;
          net localgroup Administrators ansible /add;

      - name: Run all Ansible roles
        shell: bash
        run: |
          for role in roles/*; do
            if [ -d "$role/tasks" ]; then
              echo "Testing role: $role"
              ansible-playbook -i inventory/localhost.yaml playbooks/setup.yml --tags "$(basename $role)" || exit 1
            fi
          done
        env:
          ANSIBLE_FORCE_COLOR: "true"
        if: runner.os != 'Windows'

      - name: Run all Ansible roles on Windows
        if: runner.os == 'Windows'
        shell: C:\cygwin64\bin\bash.exe -l
        run: |
          echo "current dir: $(pwd)"
          echo "starting roles test"
          for role in roles/*; do
            if [ -d "$role/tasks" ]; then
              echo "Testing role: $role"
              ansible-playbook -i inventory/windows.yaml playbooks/setup.yml --tags "$(basename $role)" || exit 1
            fi
          done
        env:
          ANSIBLE_FORCE_COLOR: "true"
